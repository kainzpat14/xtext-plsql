
grammar sh.kainz.plsql.Plsql hidden(WS, ML_COMMENT, SL_COMMENT)

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate plsql "http://www.kainz.sh/plsql/Plsql"


Model:
	statements+=Statement*;
	
Statement:
	Table | AlterTable | Select
;

Table:
	'CREATE' 'TABLE' name=ID '('
		columns+= Column+
	')'
;

AlterTable: 
	'ALTER' 'TABLE' table=[Table] '('
		columns+= TableColumn+
	')'
;

TableColumn:
	name=ID type=SqlType
;

SqlType:
	Varchar2Type | NumberType
;

Varchar2Type:
	'VARCHAR2' '(' size=INT ')'
;

NumberType:
	'NUMBER' '(' size=INT (',' precision=INT)? ')'
;
//https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/img_text/select.html
Select:
	Subquery forupdate=('FOR UPDATE')?
;

//https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/img_text/subquery.html
Subquery:
	SetOperation | '(' Subquery ')' 
;

SetOperation:
	AtomicSubquery (({Union.left=current} 'UNION' all='ALL'? | 
			 {Intersection.left=current} 'INTERSECT' |
			 {SetSubstraction.left=current} 'MINUS'
			) right=Subquery)?
;

AtomicSubquery:
	Queryblock 
;

//https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/img_text/query_block.html
Queryblock: 
	'SELECT' columns+=SelectColumn+
	'FROM' source=SelectSource
;

SelectSource:
	TableReference | Subselect
;

TableReference: 
	table=[Table]
;

Subselect:
	'(' Subquery ')'
;

SelectColumn:
	SelectExpression ('AS' name=ID)?
;

SelectExpression:
	ColumnExpression | StringExpression
;

ColumnExpression:
	column=[Column]
;

Column:
	SelectColumn | TableColumn
;

StringExpression:
	text=STRING
;

terminal ID: CASE_SENSITIVE_ID | CASE_INSENSITIVE_ID;
terminal CASE_INSENSITIVE_ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
terminal CASE_SENSITIVE_ID: '"' !'"'* '"';
terminal INT returns ecore::EInt: ('0'..'9')+;
terminal STRING:
			"'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") | "''" )* "'"
		;
terminal ML_COMMENT : '/*' -> '*/';
terminal SL_COMMENT : '--' !('\n'|'\r')* ('\r'? '\n')?;

terminal WS         : (' '|'\t'|'\r'|'\n')+;

terminal ANY_OTHER: .;


